<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/aop classpath:schema/spring-aop.xsd
        http://www.springframework.org/schema/beans classpath:schema/spring-beans.xsd 
        http://www.springframework.org/schema/context classpath:schema/spring-context.xsd 
        http://www.springframework.org/schema/mvc classpath:schema/spring-mvc.xsd 
        http://www.springframework.org/schema/tx classpath:schema/spring-tx.xsd">  
<!-- 自动扫描注解，只扫描的Controller注解，其它注解的扫描交给spring去处理 --> 
<context:component-scan base-package="com.vulnverify.web.controller"/> 
  <!-- 引入配置文件 -->
    <bean id="PropertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:application.properties</value>
            </list>
        </property>
    </bean> 
 <!-- 
  会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的
    指定自己定义的validator，为了用来登陆解密验证-->
    <mvc:annotation-driven validator="validator">
   	    <mvc:message-converters>  
	        <bean class="com.vulnverify.web.converter.SimpleMappingJacksonHttpMessageConverter">
		        <property name="supportedMediaTypes">
		            <list>
		                <value>*/*</value>
		            </list>
		        </property>
	        </bean>  
	    </mvc:message-converters>  
    </mvc:annotation-driven>
 
  <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
       <!--  如果不加默认到 使用classpath下的 ValidationMessages.properties-->
        <property name="validationMessageSource" ref="reloadMessageSource"/>
    </bean>
    
     <!--  国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
    <bean id="reloadMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
                <value>classpath:messages</value>
                <value>classpath:org/hibernate/validator/ValidationMessages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>
     <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="zh_CN"/>
    </bean>
    
	<!-- 配置springmvc的视图解析器 --> 
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
	p:prefix="/WEB-INF/views/" p:suffix=".jsp"> 
	</bean> 
 <!-- <mvc:default-servlet-handler /> -->
    <mvc:resources mapping="/static/**" location="/static/" /> 

    <!-- 配置文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
        <!-- 设置上传文件最大尺寸，单位为B，当前设置为10GB-->
        <property name="maxUploadSize" value="10737418240" /> 
    </bean>
    
     <!-- 异常处理 -->
    <bean id="exceptionResolver" class="com.vulnverify.web.resolver.SimpleExceptionResolver"></bean>
    
    <!-- 启用shrio授权注解拦截方式 -->
    <aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>